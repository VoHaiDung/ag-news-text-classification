syntax = "proto3";

package ag_news;

import "common/types.proto";
import "common/status.proto";
import "google/protobuf/timestamp.proto";

// Data service definition
service DataService {
    // Upload dataset using streaming
    rpc UploadDataset(stream UploadDatasetRequest) returns (UploadDatasetResponse);
    
    // Get dataset information
    rpc GetDataset(GetDatasetRequest) returns (GetDatasetResponse);
    
    // List datasets
    rpc ListDatasets(ListDatasetsRequest) returns (ListDatasetsResponse);
    
    // Delete dataset
    rpc DeleteDataset(DeleteDatasetRequest) returns (DeleteDatasetResponse);
    
    // Preprocess data
    rpc PreprocessData(PreprocessDataRequest) returns (PreprocessDataResponse);
    
    // Augment data
    rpc AugmentData(AugmentDataRequest) returns (AugmentDataResponse);
    
    // Validate data quality
    rpc ValidateData(ValidateDataRequest) returns (ValidateDataResponse);
    
    // Stream data samples
    rpc StreamDataSamples(StreamDataSamplesRequest) returns (stream DataSample);
    
    // Get dataset statistics
    rpc GetDatasetStatistics(GetDatasetStatisticsRequest) returns (GetDatasetStatisticsResponse);
}

// Dataset status enumeration
enum DatasetStatus {
    DATASET_UNKNOWN = 0;
    UPLOADING = 1;
    PROCESSING = 2;
    READY = 3;
    ERROR = 4;
    ARCHIVED = 5;
}

// Upload dataset request (streaming)
message UploadDatasetRequest {
    oneof data {
        DatasetMetadata metadata = 1;
        bytes chunk_data = 2;
    }
}

// Dataset metadata
message DatasetMetadata {
    string name = 1;
    string description = 2;
    string format = 3;  // json, csv, text, etc.
    string split = 4;   // train, validation, test
    repeated string labels = 5;
    string source = 6;
    map<string, string> properties = 7;
}

// Upload dataset response
message UploadDatasetResponse {
    Dataset dataset = 1;
    int64 bytes_received = 2;
    common.Status status = 3;
}

// Dataset information
message Dataset {
    string dataset_id = 1;
    string name = 2;
    string description = 3;
    int64 size = 4;
    int32 num_samples = 5;
    int64 created_at = 6;
    int64 updated_at = 7;
    DatasetStatus status = 8;
    string format = 9;
    string split = 10;
    DatasetStatistics statistics = 11;
    map<string, string> properties = 12;
}

// Dataset statistics
message DatasetStatistics {
    int32 total_samples = 1;
    float avg_text_length = 2;
    int32 min_text_length = 3;
    int32 max_text_length = 4;
    int32 vocabulary_size = 5;
    map<string, int32> label_distribution = 6;
    float class_balance_ratio = 7;
}

// Get dataset request
message GetDatasetRequest {
    string dataset_id = 1;
    bool include_statistics = 2;
}

// Get dataset response
message GetDatasetResponse {
    Dataset dataset = 1;
    common.Status status = 2;
}

// List datasets request
message ListDatasetsRequest {
    string split = 1;
    string format = 2;
    int32 min_samples = 3;
    int32 limit = 4;
    int32 offset = 5;
}

// List datasets response
message ListDatasetsResponse {
    repeated Dataset datasets = 1;
    int32 total_count = 2;
    common.Status status = 3;
}

// Delete dataset request
message DeleteDatasetRequest {
    string dataset_id = 1;
    bool force = 2;
}

// Delete dataset response
message DeleteDatasetResponse {
    bool success = 1;
    string message = 2;
    common.Status status = 3;
}

// Preprocess data request
message PreprocessDataRequest {
    string dataset_id = 1;
    bool lowercase = 2;
    bool remove_punctuation = 3;
    bool remove_stopwords = 4;
    bool lemmatize = 5;
    int32 max_length = 6;
    int32 min_length = 7;
    repeated string custom_steps = 8;
    bool create_new_dataset = 9;
}

// Preprocess data response
message PreprocessDataResponse {
    string dataset_id = 1;
    int32 samples_processed = 2;
    int32 samples_filtered = 3;
    float processing_time_seconds = 4;
    common.Status status = 5;
}

// Augment data request
message AugmentDataRequest {
    string dataset_id = 1;
    bool back_translation = 2;
    repeated string translation_languages = 3;
    bool paraphrase = 4;
    int32 num_paraphrases = 5;
    bool synonym_replacement = 6;
    float replacement_ratio = 7;
    bool noise_injection = 8;
    float noise_level = 9;
    int32 augmentation_factor = 10;
}

// Augment data response
message AugmentDataResponse {
    string augmented_dataset_id = 1;
    int32 original_samples = 2;
    int32 augmented_samples = 3;
    int32 total_samples = 4;
    common.Status status = 5;
}

// Validate data request
message ValidateDataRequest {
    string dataset_id = 1;
    repeated string validation_checks = 2;
}

// Validate data response
message ValidateDataResponse {
    bool is_valid = 1;
    repeated ValidationIssue issues = 2;
    QualityMetrics quality_metrics = 3;
    common.Status status = 4;
}

// Validation issue
message ValidationIssue {
    string severity = 1;  // ERROR, WARNING, INFO
    string category = 2;
    string message = 3;
    int32 affected_samples = 4;
}

// Quality metrics
message QualityMetrics {
    float completeness = 1;
    float consistency = 2;
    float accuracy = 3;
    float uniqueness = 4;
}

// Stream data samples request
message StreamDataSamplesRequest {
    string dataset_id = 1;
    int32 batch_size = 2;
    int32 max_samples = 3;
}

// Data sample
message DataSample {
    string sample_id = 1;
    string text = 2;
    string label = 3;
    string metadata = 4;  // JSON string
}

// Get dataset statistics request
message GetDatasetStatisticsRequest {
    string dataset_id = 1;
    bool detailed = 2;
}

// Get dataset statistics response
message GetDatasetStatisticsResponse {
    DatasetStatistics statistics = 1;
    map<string, float> advanced_metrics = 2;
    common.Status status = 3;
}
