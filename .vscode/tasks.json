{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": [
                "install",
                "-r",
                "requirements/dev.txt"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Setup Environment",
            "type": "shell",
            "command": "bash",
            "args": [
                "${workspaceFolder}/scripts/setup/setup_environment.sh"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Download Data",
            "type": "shell",
            "command": "python",
            "args": [
                "${workspaceFolder}/scripts/setup/download_all_data.py"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Prepare Data",
            "type": "shell",
            "command": "python",
            "args": [
                "${workspaceFolder}/scripts/data_preparation/prepare_ag_news.py"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "pytest",
            "args": [
                "tests",
                "-v",
                "--cov=src",
                "--cov-report=term-missing",
                "--cov-report=html"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Unit Tests",
            "type": "shell",
            "command": "pytest",
            "args": [
                "tests/unit",
                "-v",
                "--tb=short"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Integration Tests",
            "type": "shell",
            "command": "pytest",
            "args": [
                "tests/integration",
                "-v",
                "--tb=short"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Lint Code",
            "type": "shell",
            "command": "flake8",
            "args": [
                "src",
                "tests",
                "scripts",
                "--config=${workspaceFolder}/.flake8"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Format Code",
            "type": "shell",
            "command": "black",
            "args": [
                "src",
                "tests",
                "scripts",
                "--line-length=120"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Sort Imports",
            "type": "shell",
            "command": "isort",
            "args": [
                "src",
                "tests",
                "scripts",
                "--profile=black",
                "--line-length=120"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Type Check",
            "type": "shell",
            "command": "mypy",
            "args": [
                "src",
                "--ignore-missing-imports",
                "--no-strict-optional"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Compile Protobuf",
            "type": "shell",
            "command": "bash",
            "args": [
                "${workspaceFolder}/scripts/api/compile_protos.sh"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Build Docker Image",
            "type": "shell",
            "command": "docker",
            "args": [
                "build",
                "-t",
                "ag-news-classifier:latest",
                "-f",
                "deployment/docker/Dockerfile.api",
                "."
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker Compose Up",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "up",
                "-d"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker Compose Down",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "down"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Start Redis",
            "type": "shell",
            "command": "redis-server",
            "isBackground": true,
            "problemMatcher": [],
            "presentation": {
                "reveal": "always",
                "panel": "dedicated"
            }
        },
        {
            "label": "Start Celery Worker",
            "type": "shell",
            "command": "celery",
            "args": [
                "-A",
                "src.services.queue.celery_tasks",
                "worker",
                "--loglevel=info"
            ],
            "isBackground": true,
            "problemMatcher": [],
            "presentation": {
                "reveal": "always",
                "panel": "dedicated"
            }
        },
        {
            "label": "Start Celery Beat",
            "type": "shell",
            "command": "celery",
            "args": [
                "-A",
                "src.services.queue.celery_tasks",
                "beat",
                "--loglevel=info"
            ],
            "isBackground": true,
            "problemMatcher": [],
            "presentation": {
                "reveal": "always",
                "panel": "dedicated"
            }
        },
        {
            "label": "Start TensorBoard",
            "type": "shell",
            "command": "tensorboard",
            "args": [
                "--logdir=${workspaceFolder}/outputs/logs/tensorboard",
                "--port=6006"
            ],
            "isBackground": true,
            "problemMatcher": [],
            "presentation": {
                "reveal": "always",
                "panel": "dedicated"
            }
        },
        {
            "label": "Generate Documentation",
            "type": "shell",
            "command": "sphinx-build",
            "args": [
                "-b",
                "html",
                "docs",
                "docs/_build"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Clean Build Artifacts",
            "type": "shell",
            "command": "make",
            "args": [
                "clean"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Benchmarks",
            "type": "shell",
            "command": "bash",
            "args": [
                "${workspaceFolder}/ci/run_benchmarks.sh"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Profile Memory",
            "type": "shell",
            "command": "python",
            "args": [
                "-m",
                "memory_profiler",
                "${file}"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Security Scan",
            "type": "shell",
            "command": "bandit",
            "args": [
                "-r",
                "src",
                "-f",
                "json",
                "-o",
                "security_report.json"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        }
    ]
}
