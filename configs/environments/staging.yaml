# Staging Environment Configuration
# AG News Text Classification Framework

environment: staging
stage: staging
debug: false
verbose: true

# System settings
system:
  seed: 42
  deterministic: true
  num_workers: 8
  pin_memory: true
  prefetch_factor: 4
  persistent_workers: true

# Hardware configuration
hardware:
  device: cuda
  gpu_ids: [0, 1]
  mixed_precision: true
  gradient_checkpointing: false
  memory_fraction: 0.9
  allow_tf32: true

# Data settings
data:
  base_dir: ./data
  cache_dir: ./.cache/staging
  use_cached_datasets: true
  max_samples: null  # Use all data
  validation_size: 0.15
  test_size: 0.15
  shuffle: true
  
  # Preprocessing
  preprocessing:
    max_length: 512
    batch_size: 32
    normalize_text: true
    remove_special_chars: false
    lowercase: false
  
  # Augmentation
  augmentation:
    enabled: true
    techniques:
      - synonym_replacement
      - back_translation
    augmentation_factor: 1.5

# Model settings
model:
  use_pretrained: true
  cache_pretrained: true
  compile_model: true  # Enable torch.compile
  
  # Model selection for staging
  default_model: roberta-large
  
  # Optimization
  quantization: false
  pruning: false

# Training settings
training:
  num_epochs: 10
  batch_size: 32
  gradient_accumulation_steps: 2
  learning_rate: 2e-5
  warmup_ratio: 0.1
  
  # Optimization
  optimizer: adamw
  scheduler: cosine
  max_grad_norm: 1.0
  weight_decay: 0.01
  
  # Checkpointing
  save_strategy: epoch
  save_total_limit: 3
  load_best_model_at_end: true
  metric_for_best_model: f1_macro
  
  # Evaluation
  evaluation_strategy: epoch
  logging_steps: 50
  
  # Early stopping
  early_stopping: true
  early_stopping_patience: 3
  early_stopping_threshold: 0.001

# Experiment tracking
tracking:
  use_wandb: true
  use_mlflow: false
  use_tensorboard: true
  use_local_logging: true
  
  log_level: INFO
  log_to_file: true
  log_dir: ./outputs/logs/staging
  
  # Metrics
  track_metrics: true
  track_gradients: true
  track_parameters: true
  track_embeddings: false
  
  # Wandb settings
  wandb:
    project: ag-news-staging
    entity: ag-news-team
    tags: [staging, validation]
    notes: "Staging environment validation"

# API settings
api:
  host: 0.0.0.0
  port: 8080
  workers: 4
  reload: false
  debug: false
  cors_origins: ["https://staging.agnews.ai"]
  
  # Rate limiting
  rate_limit: 100
  timeout: 30

# Security
security:
  enable_auth: true
  enable_https: true
  api_key_required: true
  encrypt_data: true
  
  # SSL
  ssl_cert_file: ./certs/staging.crt
  ssl_key_file: ./certs/staging.key

# Monitoring
monitoring:
  enable_profiling: true
  profile_memory: false
  profile_time: true
  
  # Metrics collection
  collect_system_metrics: true
  collect_gpu_metrics: true
  metrics_port: 9090
  
  # Alerts
  enable_alerts: true
  alert_channels: [email, slack]
  
  # Dashboard
  dashboard_port: 3000
  dashboard_auth_required: true

# Testing
testing:
  run_tests_before_deploy: true
  test_coverage_threshold: 80
  run_integration_tests: true
  run_performance_tests: true
  run_security_tests: true

# Deployment
deployment:
  strategy: blue_green
  health_check_path: /health
  readiness_check_path: /ready
  
  # Container settings
  container:
    registry: agnews-registry.io
    image: ag-news-classifier:staging
    memory_limit: 16Gi
    cpu_limit: 8

# Resource limits
resource_limits:
  max_memory_gb: 32
  max_gpu_memory_gb: 16
  max_cpu_percent: 90
  max_disk_gb: 100

# Paths
paths:
  data_dir: ./data
  models_dir: ./outputs/models/staging
  checkpoints_dir: ./outputs/models/staging/checkpoints
  logs_dir: ./outputs/logs/staging
  cache_dir: ./.cache/staging
  temp_dir: ./.tmp/staging

# Feature flags
features:
  enable_experimental: false
  enable_beta_features: true
  enable_debug_endpoints: false
  enable_mock_data: false
  
# Database
database:
  type: postgresql
  host: staging-db.agnews.internal
  port: 5432
  name: agnews_staging
  pool_size: 10
  
# Cache
cache:
  type: redis
  host: staging-cache.agnews.internal
  port: 6379
  ttl: 3600

# External services
external_services:
  openai:
    enabled: false
  huggingface:
    enabled: true
    use_auth_token: true
