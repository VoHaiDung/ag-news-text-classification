# API Keys Configuration Template
# ================================
#
# This template defines all external API keys required by the system.
# Copy this file to api_keys.yaml and populate with actual values.
# NEVER commit api_keys.yaml to version control.
#
# API key management best practices:
# - Use separate keys for development, staging, and production
# - Implement key rotation policies
# - Monitor API usage and set alerts for anomalies
# - Use API gateways for centralized management
#
# References:
# - OWASP API Security Top 10
# - RFC 7235: HTTP Authentication
#
# Author: Võ Hải Dũng
# License: MIT

# Language Model APIs
language_models:
  # OpenAI API
  openai:
    api_key: "OPENAI_API_KEY_PLACEHOLDER"
    organization_id: "OPENAI_ORG_ID_PLACEHOLDER"
    api_version: "2023-12-01"
    model_endpoints:
      gpt4: "gpt-4-1106-preview"
      gpt35: "gpt-3.5-turbo-1106"
      embedding: "text-embedding-3-large"
    rate_limits:
      requests_per_minute: 3000
      tokens_per_minute: 250000
    
  # Anthropic Claude API
  anthropic:
    api_key: "ANTHROPIC_API_KEY_PLACEHOLDER"
    api_version: "2023-06-01"
    model: "claude-3-opus-20240229"
    max_tokens: 4096
    
  # Cohere API
  cohere:
    api_key: "COHERE_API_KEY_PLACEHOLDER"
    model: "command-r-plus"
    
  # Google AI (PaLM/Gemini)
  google_ai:
    api_key: "GOOGLE_AI_API_KEY_PLACEHOLDER"
    project_id: "GOOGLE_PROJECT_ID_PLACEHOLDER"
    location: "us-central1"
    model: "gemini-pro"
    
  # Hugging Face
  huggingface:
    api_token: "HF_API_TOKEN_PLACEHOLDER"
    inference_endpoint: "https://api-inference.huggingface.co/models/"
    private_model_token: "HF_PRIVATE_TOKEN_PLACEHOLDER"

# Translation APIs
translation:
  # Google Translate
  google_translate:
    api_key: "GOOGLE_TRANSLATE_API_KEY_PLACEHOLDER"
    project_id: "GOOGLE_PROJECT_ID_PLACEHOLDER"
    
  # DeepL
  deepl:
    api_key: "DEEPL_API_KEY_PLACEHOLDER"
    api_type: "free"  # free | pro
    
  # Microsoft Translator
  microsoft_translator:
    api_key: "AZURE_TRANSLATOR_KEY_PLACEHOLDER"
    endpoint: "https://api.cognitive.microsofttranslator.com"
    region: "westus2"
    
  # AWS Translate
  aws_translate:
    access_key_id: "AWS_TRANSLATE_ACCESS_KEY_PLACEHOLDER"
    secret_access_key: "AWS_TRANSLATE_SECRET_KEY_PLACEHOLDER"
    region: "us-west-2"

# Cloud Platform APIs
cloud_platforms:
  # AWS
  aws:
    access_key_id: "AWS_ACCESS_KEY_ID_PLACEHOLDER"
    secret_access_key: "AWS_SECRET_ACCESS_KEY_PLACEHOLDER"
    region: "us-west-2"
    services:
      sagemaker:
        execution_role: "arn:aws:iam::ACCOUNT:role/SageMakerRole"
      comprehend:
        endpoint_arn: "COMPREHEND_ENDPOINT_ARN_PLACEHOLDER"
      bedrock:
        model_id: "anthropic.claude-v2"
        
  # Google Cloud Platform
  gcp:
    credentials_path: "/path/to/gcp-credentials.json"
    project_id: "GCP_PROJECT_ID_PLACEHOLDER"
    services:
      vertex_ai:
        endpoint: "VERTEX_ENDPOINT_PLACEHOLDER"
        location: "us-central1"
      natural_language:
        api_key: "GCP_NL_API_KEY_PLACEHOLDER"
        
  # Microsoft Azure
  azure:
    subscription_id: "AZURE_SUBSCRIPTION_ID_PLACEHOLDER"
    tenant_id: "AZURE_TENANT_ID_PLACEHOLDER"
    client_id: "AZURE_CLIENT_ID_PLACEHOLDER"
    client_secret: "AZURE_CLIENT_SECRET_PLACEHOLDER"
    services:
      cognitive_services:
        endpoint: "https://your-resource.cognitiveservices.azure.com/"
        api_key: "AZURE_COG_API_KEY_PLACEHOLDER"
      ml_studio:
        workspace_name: "ag-news-workspace"
        resource_group: "ag-news-rg"

# Data and Analytics APIs
analytics:
  # Google Analytics
  google_analytics:
    tracking_id: "GA_TRACKING_ID_PLACEHOLDER"
    api_key: "GA_API_KEY_PLACEHOLDER"
    view_id: "GA_VIEW_ID_PLACEHOLDER"
    
  # Mixpanel
  mixpanel:
    token: "MIXPANEL_TOKEN_PLACEHOLDER"
    api_secret: "MIXPANEL_API_SECRET_PLACEHOLDER"
    
  # Segment
  segment:
    write_key: "SEGMENT_WRITE_KEY_PLACEHOLDER"
    
  # Amplitude
  amplitude:
    api_key: "AMPLITUDE_API_KEY_PLACEHOLDER"
    secret_key: "AMPLITUDE_SECRET_KEY_PLACEHOLDER"

# Search and Database APIs
search_database:
  # Elasticsearch
  elasticsearch:
    cloud_id: "ES_CLOUD_ID_PLACEHOLDER"
    api_key: "ES_API_KEY_PLACEHOLDER"
    username: "elastic"
    password: "ES_PASSWORD_PLACEHOLDER"
    
  # Algolia
  algolia:
    app_id: "ALGOLIA_APP_ID_PLACEHOLDER"
    api_key: "ALGOLIA_API_KEY_PLACEHOLDER"
    search_api_key: "ALGOLIA_SEARCH_KEY_PLACEHOLDER"
    
  # Pinecone (Vector DB)
  pinecone:
    api_key: "PINECONE_API_KEY_PLACEHOLDER"
    environment: "us-west1-gcp"
    
  # Weaviate
  weaviate:
    url: "https://your-cluster.weaviate.network"
    api_key: "WEAVIATE_API_KEY_PLACEHOLDER"

# Communication APIs
communication:
  # SendGrid (Email)
  sendgrid:
    api_key: "SENDGRID_API_KEY_PLACEHOLDER"
    from_email: "noreply@example.com"
    
  # Twilio (SMS/Voice)
  twilio:
    account_sid: "TWILIO_ACCOUNT_SID_PLACEHOLDER"
    auth_token: "TWILIO_AUTH_TOKEN_PLACEHOLDER"
    phone_number: "+1234567890"
    
  # Slack
  slack:
    bot_token: "SLACK_BOT_TOKEN_PLACEHOLDER"
    app_token: "SLACK_APP_TOKEN_PLACEHOLDER"
    signing_secret: "SLACK_SIGNING_SECRET_PLACEHOLDER"
    
  # Discord
  discord:
    bot_token: "DISCORD_BOT_TOKEN_PLACEHOLDER"
    webhook_url: "DISCORD_WEBHOOK_URL_PLACEHOLDER"

# Payment and Billing APIs
payment:
  # Stripe
  stripe:
    publishable_key: "STRIPE_PK_PLACEHOLDER"
    secret_key: "STRIPE_SK_PLACEHOLDER"
    webhook_secret: "STRIPE_WEBHOOK_SECRET_PLACEHOLDER"
    
  # PayPal
  paypal:
    client_id: "PAYPAL_CLIENT_ID_PLACEHOLDER"
    client_secret: "PAYPAL_CLIENT_SECRET_PLACEHOLDER"
    mode: "sandbox"  # sandbox | live

# External Data Sources
external_data:
  # News APIs
  newsapi:
    api_key: "NEWSAPI_KEY_PLACEHOLDER"
    
  # Reuters
  reuters:
    api_key: "REUTERS_API_KEY_PLACEHOLDER"
    api_secret: "REUTERS_API_SECRET_PLACEHOLDER"
    
  # Twitter/X API
  twitter:
    api_key: "TWITTER_API_KEY_PLACEHOLDER"
    api_secret: "TWITTER_API_SECRET_PLACEHOLDER"
    bearer_token: "TWITTER_BEARER_TOKEN_PLACEHOLDER"
    access_token: "TWITTER_ACCESS_TOKEN_PLACEHOLDER"
    access_token_secret: "TWITTER_ACCESS_SECRET_PLACEHOLDER"
    
  # Reddit API
  reddit:
    client_id: "REDDIT_CLIENT_ID_PLACEHOLDER"
    client_secret: "REDDIT_CLIENT_SECRET_PLACEHOLDER"
    user_agent: "ag-news-classifier/1.0"

# Model Registries
model_registries:
  # Hugging Face Model Hub
  huggingface_hub:
    token: "HF_HUB_TOKEN_PLACEHOLDER"
    organization: "your-org"
    
  # MLflow
  mlflow:
    tracking_uri: "http://localhost:5000"
    username: "MLFLOW_USERNAME_PLACEHOLDER"
    password: "MLFLOW_PASSWORD_PLACEHOLDER"
    
  # Weights & Biases
  wandb:
    api_key: "WANDB_API_KEY_PLACEHOLDER"
    entity: "your-entity"
    project: "ag-news"

# Infrastructure and DevOps
infrastructure:
  # Docker Hub
  docker_hub:
    username: "DOCKER_USERNAME_PLACEHOLDER"
    password: "DOCKER_PASSWORD_PLACEHOLDER"
    
  # GitHub
  github:
    personal_access_token: "GITHUB_PAT_PLACEHOLDER"
    app_id: "GITHUB_APP_ID_PLACEHOLDER"
    app_private_key: "GITHUB_APP_PRIVATE_KEY_PLACEHOLDER"
    
  # GitLab
  gitlab:
    private_token: "GITLAB_TOKEN_PLACEHOLDER"
    
  # Terraform Cloud
  terraform:
    api_token: "TERRAFORM_API_TOKEN_PLACEHOLDER"
    organization: "your-org"

# CDN and Storage
cdn_storage:
  # Cloudflare
  cloudflare:
    api_token: "CLOUDFLARE_API_TOKEN_PLACEHOLDER"
    zone_id: "CLOUDFLARE_ZONE_ID_PLACEHOLDER"
    
  # Fastly
  fastly:
    api_key: "FASTLY_API_KEY_PLACEHOLDER"
    service_id: "FASTLY_SERVICE_ID_PLACEHOLDER"
    
  # Cloudinary
  cloudinary:
    cloud_name: "CLOUDINARY_CLOUD_NAME_PLACEHOLDER"
    api_key: "CLOUDINARY_API_KEY_PLACEHOLDER"
    api_secret: "CLOUDINARY_API_SECRET_PLACEHOLDER"

# Security and Compliance
security:
  # VirusTotal
  virustotal:
    api_key: "VIRUSTOTAL_API_KEY_PLACEHOLDER"
    
  # Snyk
  snyk:
    api_token: "SNYK_API_TOKEN_PLACEHOLDER"
    
  # SonarQube
  sonarqube:
    token: "SONARQUBE_TOKEN_PLACEHOLDER"
    host_url: "https://sonarqube.example.com"

# Rate Limiting Configuration
rate_limits:
  default_tier: "standard"
  
  tiers:
    free:
      requests_per_minute: 10
      requests_per_day: 1000
      
    standard:
      requests_per_minute: 60
      requests_per_day: 10000
      
    premium:
      requests_per_minute: 300
      requests_per_day: 100000
      
    enterprise:
      requests_per_minute: 1000
      requests_per_day: 1000000

# API Key Rotation Schedule
rotation_schedule:
  critical: 30  # days
  high: 60
  medium: 90
  low: 180

# Monitoring and Alerting
monitoring:
  # Track API usage
  usage_tracking:
    enabled: true
    alert_threshold: 0.8  # Alert at 80% of quota
    
  # Cost monitoring
  cost_alerts:
    enabled: true
    monthly_budget: 1000  # USD
    alert_threshold: 0.9  # Alert at 90% of budget

# Environment-specific overrides
environments:
  development:
    use_mock_apis: true
    rate_limit_multiplier: 0.1
    
  staging:
    use_mock_apis: false
    rate_limit_multiplier: 0.5
    
  production:
    use_mock_apis: false
    rate_limit_multiplier: 1.0

# Validation and testing
validation:
  # API key format validation
  key_patterns:
    openai: "^sk-[a-zA-Z0-9]{48}$"
    anthropic: "^sk-ant-[a-zA-Z0-9]{40,}$"
    huggingface: "^hf_[a-zA-Z0-9]{34}$"
    
  # Connection testing
  test_on_startup: true
  test_interval: 3600  # seconds

# Notes
notes: |
  API Key Management Guidelines:
  
  1. Security:
     - Store keys in environment variables or secret managers
     - Never expose keys in client-side code
     - Use different keys for different environments
     - Implement key rotation
  
  2. Monitoring:
     - Track API usage and costs
     - Set up alerts for unusual activity
     - Monitor rate limits
     - Log API errors
  
  3. Best Practices:
     - Use API gateways for centralized management
     - Implement retry logic with exponential backoff
     - Cache API responses when appropriate
     - Use circuit breakers for fault tolerance
  
  4. Compliance:
     - Ensure GDPR compliance for EU data
     - Follow data residency requirements
     - Implement audit logging
     - Regular security reviews
