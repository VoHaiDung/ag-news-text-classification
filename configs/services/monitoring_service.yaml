# Monitoring Service Configuration for AG News Text Classification
# ================================================================================
# This configuration file defines settings for the monitoring service including
# metrics collection, alerting, logging aggregation, and observability features.
#
# References:
#   - Google SRE Book: Site Reliability Engineering (2016)
#   - Distributed Systems Observability (O'Reilly, 2018)
#
# Author: Võ Hải Dũng
# License: MIT

# Service Metadata
service:
  name: "monitoring-service"
  version: "1.0.0"
  description: "System monitoring and observability service"
  namespace: "agnews"

# Metrics Collection
metrics:
  # Collection configuration
  collection:
    interval_seconds: 10
    batch_size: 1000
    flush_interval_seconds: 30
    
  # Metric sources
  sources:
    - name: "application"
      type: "prometheus"
      endpoints:
        - "http://prediction-service:9090/metrics"
        - "http://training-service:9090/metrics"
        - "http://data-service:9090/metrics"
        
    - name: "infrastructure"
      type: "node_exporter"
      endpoints:
        - "http://node-exporter:9100/metrics"
        
    - name: "gpu"
      type: "nvidia_dcgm"
      endpoints:
        - "http://dcgm-exporter:9400/metrics"
        
  # Metric definitions
  definitions:
    # Application metrics
    application:
      - name: "request_rate"
        type: "counter"
        unit: "requests/second"
        
      - name: "response_time"
        type: "histogram"
        unit: "milliseconds"
        buckets: [10, 50, 100, 500, 1000, 5000]
        
      - name: "error_rate"
        type: "gauge"
        unit: "percentage"
        
      - name: "model_inference_time"
        type: "histogram"
        unit: "milliseconds"
        
    # System metrics
    system:
      - name: "cpu_usage"
        type: "gauge"
        unit: "percentage"
        
      - name: "memory_usage"
        type: "gauge"
        unit: "bytes"
        
      - name: "disk_usage"
        type: "gauge"
        unit: "bytes"
        
      - name: "network_throughput"
        type: "counter"
        unit: "bytes/second"
        
    # Business metrics
    business:
      - name: "predictions_processed"
        type: "counter"
        unit: "count"
        
      - name: "models_trained"
        type: "counter"
        unit: "count"
        
      - name: "data_processed"
        type: "counter"
        unit: "gigabytes"
        
# Storage Backend
storage:
  # Time series database
  tsdb:
    type: "prometheus"  # prometheus, influxdb, timescaledb
    
    prometheus:
      retention_days: 30
      storage_path: "/prometheus"
      wal_compression: true
      
    influxdb:
      url: "${INFLUXDB_URL}"
      database: "agnews_metrics"
      retention_policy: "30d"
      
  # Long-term storage
  long_term:
    enabled: true
    type: "s3"  # s3, gcs, azure
    bucket: "${METRICS_BUCKET}"
    compression: "snappy"
    
# Alerting Configuration
alerting:
  # Alert manager
  manager:
    type: "prometheus_alertmanager"  # prometheus_alertmanager, pagerduty
    url: "http://alertmanager:9093"
    
  # Alert rules
  rules:
    - name: "high_error_rate"
      condition: "error_rate > 5"
      duration: "5m"
      severity: "critical"
      annotations:
        summary: "High error rate detected"
        description: "Error rate is above 5% for 5 minutes"
        
    - name: "slow_response_time"
      condition: "response_time_p95 > 1000"
      duration: "10m"
      severity: "warning"
      annotations:
        summary: "Slow response times"
        description: "95th percentile response time > 1s"
        
    - name: "model_drift"
      condition: "model_drift_score > 0.15"
      duration: "1h"
      severity: "warning"
      annotations:
        summary: "Model drift detected"
        description: "Model performance degradation detected"
        
    - name: "high_memory_usage"
      condition: "memory_usage_percent > 90"
      duration: "5m"
      severity: "critical"
      annotations:
        summary: "High memory usage"
        description: "Memory usage above 90%"
        
  # Notification channels
  notifications:
    - name: "email"
      type: "email"
      config:
        smtp_server: "${SMTP_SERVER}"
        recipients: ["ops@example.com"]
        
    - name: "slack"
      type: "slack"
      config:
        webhook_url: "${SLACK_WEBHOOK}"
        channel: "#alerts"
        
    - name: "pagerduty"
      type: "pagerduty"
      config:
        integration_key: "${PAGERDUTY_KEY}"
        
# Logging Configuration
logging:
  # Log aggregation
  aggregation:
    type: "elasticsearch"  # elasticsearch, loki, cloudwatch
    
    elasticsearch:
      hosts: ["http://elasticsearch:9200"]
      index_pattern: "agnews-logs-%Y.%m.%d"
      
    loki:
      url: "http://loki:3100"
      
  # Log processing
  processing:
    # Log parsing
    parsing:
      format: "json"  # json, logfmt, regex
      timestamp_field: "@timestamp"
      
    # Log enrichment
    enrichment:
      add_metadata: true
      geoip_lookup: false
      
    # Log filtering
    filtering:
      min_level: "INFO"
      exclude_patterns:
        - "health_check"
        - "metrics_scrape"
        
  # Log retention
  retention:
    days: 30
    archive_enabled: true
    archive_storage: "s3"
    
# Tracing Configuration
tracing:
  # Distributed tracing
  enabled: true
  
  # Tracing backend
  backend:
    type: "jaeger"  # jaeger, zipkin, datadog
    
    jaeger:
      agent_host: "jaeger-agent"
      agent_port: 6831
      collector_endpoint: "http://jaeger-collector:14268/api/traces"
      
  # Sampling configuration
  sampling:
    type: "probabilistic"  # probabilistic, adaptive, rate_limiting
    rate: 0.1  # 10% sampling
    
  # Trace context propagation
  propagation:
    format: "w3c"  # w3c, b3, jaeger
    
# Dashboard Configuration
dashboards:
  # Dashboard provider
  provider: "grafana"  # grafana, kibana, datadog
  
  # Grafana configuration
  grafana:
    url: "http://grafana:3000"
    org_id: 1
    
    # Pre-configured dashboards
    dashboards:
      - name: "System Overview"
        uid: "system-overview"
        
      - name: "API Performance"
        uid: "api-performance"
        
      - name: "Model Metrics"
        uid: "model-metrics"
        
      - name: "Business KPIs"
        uid: "business-kpis"
        
# Health Monitoring
health:
  # Service health checks
  checks:
    - name: "database"
      type: "tcp"
      target: "postgres:5432"
      interval: "30s"
      
    - name: "redis"
      type: "tcp"
      target: "redis:6379"
      interval: "30s"
      
    - name: "api"
      type: "http"
      target: "http://api:8000/health"
      interval: "30s"
      
  # Synthetic monitoring
  synthetic:
    enabled: true
    scenarios:
      - name: "user_journey"
        steps:
          - "login"
          - "classify_text"
          - "view_results"
        interval: "5m"
        
# Reporting Configuration
reporting:
  # Scheduled reports
  scheduled:
    - name: "daily_summary"
      schedule: "0 9 * * *"  # 9 AM daily
      recipients: ["team@example.com"]
      format: "pdf"
      
    - name: "weekly_analysis"
      schedule: "0 9 * * 1"  # Monday 9 AM
      recipients: ["management@example.com"]
      format: "html"
      
  # Report templates
  templates:
    - name: "performance_report"
      metrics:
        - "request_rate"
        - "response_time"
        - "error_rate"
        
    - name: "capacity_report"
      metrics:
        - "cpu_usage"
        - "memory_usage"
        - "disk_usage"
        
# Cost Monitoring
cost:
  # Cloud cost tracking
  enabled: true
  
  providers:
    - name: "aws"
      regions: ["us-east-1"]
      services: ["EC2", "S3", "RDS"]
      
  # Budget alerts
  budgets:
    - name: "monthly_budget"
      amount: 5000
      currency: "USD"
      alert_threshold: 80
      
# Security Monitoring
security:
  # Security event monitoring
  events:
    enabled: true
    
    # Event sources
    sources:
      - "auth_logs"
      - "api_access_logs"
      - "system_logs"
      
    # Threat detection
    detection:
      - name: "brute_force"
        pattern: "failed_login > 5 in 1m"
        
      - name: "suspicious_api_calls"
        pattern: "unusual_endpoint_access"
        
  # Compliance monitoring
  compliance:
    enabled: true
    standards: ["SOC2", "GDPR"]
    
# Performance Configuration
performance:
  # Data retention
  retention:
    high_resolution: "7d"
    medium_resolution: "30d"
    low_resolution: "365d"
    
  # Aggregation rules
  aggregation:
    - interval: "1m"
      retention: "7d"
    - interval: "5m"
      retention: "30d"
    - interval: "1h"
      retention: "365d"
