# ============================================================================
# Setup Configuration for AG News Text Classification
# ============================================================================
# Project: AG News Text Classification (ag-news-text-classification)
# Description: Declarative configuration for setuptools
# Author: Võ Hải Dũng
# Email: vohaidung.work@gmail.com
# License: MIT
# ============================================================================
# This file provides alternative configuration for setuptools using
# declarative syntax. It works in conjunction with setup.py.
#
# For more information:
# - https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# ============================================================================

[metadata]
name = ag-news-text-classification
version = attr: src.__version__.__version__
author = Võ Hải Dũng
author_email = vohaidung.work@gmail.com
description = State-of-the-art text classification framework for AG News dataset
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/VoHaiDung/ag-news-text-classification
project_urls =
    Bug Reports = https://github.com/VoHaiDung/ag-news-text-classification/issues
    Documentation = https://ag-news-text-classification.readthedocs.io/
    Source Code = https://github.com/VoHaiDung/ag-news-text-classification
    Changelog = https://github.com/VoHaiDung/ag-news-text-classification/blob/main/CHANGELOG.md
license = MIT
license_files = LICENSE
keywords = 
    text-classification
    nlp
    transformers
    deep-learning
    pytorch
    ag-news
    lora
    qlora
    ensemble-learning
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Operating System :: OS Independent

[options]
packages = find:
package_dir =
    = src
python_requires = >=3.8,<3.12
install_requires =
    torch>=2.1.0,<2.3.0
    transformers>=4.36.0,<4.41.0
    tokenizers>=0.15.0,<0.16.0
    datasets>=2.16.0,<2.20.0
    accelerate>=0.25.0,<0.31.0
    safetensors>=0.4.0,<0.5.0
    numpy>=1.24.0,<1.27.0
    pandas>=2.0.0,<2.3.0
    scikit-learn>=1.3.0,<1.5.0
    pyyaml>=6.0.1,<7.0.0
    python-dotenv>=1.0.0,<1.1.0
    pydantic>=2.5.0,<2.8.0
    tqdm>=4.66.0,<4.67.0
    requests>=2.31.0,<2.33.0
    loguru>=0.7.0,<0.8.0
    rich>=13.7.0,<13.8.0
    click>=8.1.7,<8.2.0
include_package_data = True
zip_safe = False

[options.packages.find]
where = src
exclude =
    tests
    tests.*
    experiments
    notebooks
    scripts

[options.package_data]
* = 
    *.yaml
    *.yml
    *.json
    *.txt
    *.md

[options.extras_require]
# Core machine learning
ml = 
    peft>=0.7.0,<0.12.0
    bitsandbytes>=0.41.0,<0.44.0
    nltk>=3.8.0,<3.9.0
    sentencepiece>=0.1.99,<0.3.0
    xgboost>=2.0.0,<2.1.0
    lightgbm>=4.1.0,<4.4.0
    catboost>=1.2.0,<1.3.0
    optuna>=3.5.0,<3.7.0
    wandb>=0.16.0,<0.17.0
    tensorboard>=2.15.0,<2.17.0
    mlflow>=2.9.0,<2.15.0

# Large Language Models
llm = 
    %(ml)s
    tiktoken>=0.5.0,<0.8.0
    langchain>=0.1.0,<0.3.0
    sentence-transformers>=2.2.0,<3.1.0

# Efficient training
efficient = 
    peft>=0.7.0,<0.12.0
    bitsandbytes>=0.41.0,<0.44.0
    optimum>=1.16.0,<1.21.0

# Data processing
data = 
    beautifulsoup4>=4.12.0,<4.13.0
    lxml>=4.9.0,<5.3.0
    pyarrow>=14.0.0,<16.2.0
    h5py>=3.10.0,<3.12.0
    openpyxl>=3.1.0,<3.2.0

# User interface
ui = 
    streamlit>=1.30.0,<1.37.0
    gradio>=4.12.0,<4.38.0
    plotly>=5.18.0,<5.23.0
    matplotlib>=3.8.0,<3.10.0
    seaborn>=0.13.0,<0.14.0

# Development tools
dev = 
    pytest>=7.4.0,<8.3.0
    pytest-cov>=4.1.0,<5.1.0
    pytest-xdist>=3.5.0,<3.7.0
    pytest-mock>=3.12.0,<3.15.0
    black>=23.12.0,<24.5.0
    isort>=5.13.0,<5.14.0
    flake8>=7.0.0,<7.1.0
    mypy>=1.8.0,<1.11.0
    pylint>=3.0.3,<3.3.0
    pre-commit>=3.6.0,<3.8.0

# Documentation
docs = 
    sphinx>=7.2.0,<7.4.0
    sphinx-rtd-theme>=2.0.0,<2.1.0
    myst-parser>=2.0.0,<3.1.0
    mkdocs>=1.5.0,<1.7.0
    mkdocs-material>=9.5.0,<9.6.0

# Research
research = 
    %(ml)s
    optuna>=3.5.0,<3.7.0
    ray[tune]>=2.9.0,<2.10.0
    jupyter>=1.0.0,<1.1.0
    jupyterlab>=4.0.0,<4.3.0
    ipython>=8.12.0,<8.27.0

# All dependencies
all = 
    %(ml)s
    %(llm)s
    %(efficient)s
    %(data)s
    %(ui)s
    %(dev)s
    %(docs)s

[options.entry_points]
console_scripts =
    ag-news = src.cli:main
    ag-news-health = src.core.health.health_checker:main
    ag-news-train = src.cli:train_command
    ag-news-evaluate = src.cli:evaluate_command
    ag-news-setup = quickstart.setup_wizard:main

# ============================================================================
# Tool Configurations
# ============================================================================

[bdist_wheel]
universal = 0

[sdist]
formats = gztar

# ============================================================================
# Testing Configuration
# ============================================================================

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow tests
    gpu: Tests requiring GPU
    smoke: Smoke tests
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning

[coverage:run]
source = src
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*

[coverage:report]
precision = 2
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# ============================================================================
# Code Quality Configuration
# ============================================================================

[flake8]
max-line-length = 100
extend-ignore = E203, E501, W503
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .eggs,
    *.egg-info,
    .tox,
    .venv,
    venv,
    experiments,
    notebooks
per-file-ignores =
    __init__.py:F401
max-complexity = 10

[mypy]
python_version = 3.10
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
ignore_missing_imports = True
files = src

[mypy-tests.*]
ignore_errors = True

# ============================================================================
# Black Configuration
# ============================================================================

[tool:black]
line-length = 100
target-version = py310
include = \.pyi?$
extend-exclude = /(\.git|\.venv|venv|build|dist)/

# ============================================================================
# isort Configuration
# ============================================================================

[tool:isort]
profile = black
line_length = 100
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
skip_gitignore = True
skip = 
    .git
    __pycache__
    build
    dist
    .eggs
    *.egg-info

# ============================================================================
# Pylint Configuration
# ============================================================================

[pylint]
max-line-length = 100
disable = 
    C0111,
    C0103,
    R0913,
    R0914,
    W0212
good-names = i,j,k,ex,Run,_,id,lr

# ============================================================================
# Additional Metadata
# ============================================================================

[egg_info]
tag_build = 
tag_date = 0
