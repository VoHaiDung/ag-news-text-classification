# ============================================================================
# Minimal Requirements for AG News Text Classification
# ============================================================================
# Project: AG News Text Classification (ag-news-text-classification)
# Description: Absolute minimum packages for basic inference and testing
# Author: Võ Hải Dũng
# License: MIT
# Python: >=3.8,<3.12
# ============================================================================
# This file contains the bare minimum packages required for:
# - Loading pre-trained models
# - Basic text classification inference
# - Simple API serving
# - Essential testing
# - Core utilities
#
# Use cases:
# - Quick demos (5-minute setup)
# - Lightweight deployments (Docker, edge devices)
# - CI/CD testing (fast installation)
# - Colab/Kaggle free tier (memory constrained)
# - Air-gapped environments (minimal dependencies)
#
# NOT included:
# - Training capabilities
# - Advanced augmentation
# - LLM support
# - Ensemble methods
# - Visualization tools
# - Development tools
#
# For full functionality, use:
# - requirements/base.txt (core features)
# - requirements/ml.txt (training)
# - requirements/all_local.txt (everything)
# ============================================================================

# ----------------------------------------------------------------------------
# Core Deep Learning (Essential)
# ----------------------------------------------------------------------------
# PyTorch - Deep learning framework
torch>=2.1.0,<2.3.0

# Transformers - Pre-trained models
transformers>=4.36.0,<4.41.0

# Tokenizers - Fast tokenization
tokenizers>=0.15.0,<0.16.0

# Datasets - Data loading
datasets>=2.16.0,<2.20.0

# SafeTensors - Model weight format
safetensors>=0.4.0,<0.5.0

# ----------------------------------------------------------------------------
# Scientific Computing (Essential)
# ----------------------------------------------------------------------------
# NumPy - Array operations
numpy>=1.24.0,<1.27.0

# Pandas - Data manipulation
pandas>=2.0.0,<2.3.0

# Scikit-learn - ML utilities and metrics
scikit-learn>=1.3.0,<1.5.0

# ----------------------------------------------------------------------------
# Configuration Management (Essential)
# ----------------------------------------------------------------------------
# YAML parsing
pyyaml>=6.0.1,<7.0.0

# Environment variables
python-dotenv>=1.0.0,<1.1.0

# Data validation
pydantic>=2.5.0,<2.8.0

# ----------------------------------------------------------------------------
# Utilities (Essential)
# ----------------------------------------------------------------------------
# Type hints
typing-extensions>=4.9.0,<4.12.0

# Progress bars
tqdm>=4.66.0,<4.67.0

# HTTP requests
requests>=2.31.0,<2.33.0

# File locking
filelock>=3.13.0,<3.15.0

# ----------------------------------------------------------------------------
# Logging (Essential)
# ----------------------------------------------------------------------------
# Structured logging
loguru>=0.7.0,<0.8.0

# ----------------------------------------------------------------------------
# API Serving (Essential for deployment)
# ----------------------------------------------------------------------------
# FastAPI - Modern web framework
fastapi>=0.109.0,<0.112.0

# Uvicorn - ASGI server
uvicorn[standard]>=0.27.0,<0.30.0

# Pydantic (already included above)

# Starlette (included with FastAPI)

# ----------------------------------------------------------------------------
# Testing (Essential)
# ----------------------------------------------------------------------------
# Pytest - Testing framework
pytest>=7.4.0,<8.3.0

# Pytest coverage
pytest-cov>=4.1.0,<5.1.0

# ----------------------------------------------------------------------------
# Text Processing (Essential)
# ----------------------------------------------------------------------------
# NLTK - Basic NLP
nltk>=3.8.0,<3.9.0

# ----------------------------------------------------------------------------
# Serialization (Essential)
# ----------------------------------------------------------------------------
# Pickle extensions
dill>=0.3.7,<0.4.0

# Job caching
joblib>=1.3.2,<1.5.0

# ----------------------------------------------------------------------------
# Path Operations (Essential)
# ----------------------------------------------------------------------------
# Path utilities (backport for Python < 3.10)
pathlib2>=2.3.7,<2.4.0; python_version < "3.10"

# ----------------------------------------------------------------------------
# Date/Time (Essential)
# ----------------------------------------------------------------------------
# Date utilities
python-dateutil>=2.8.2,<2.10.0

# ----------------------------------------------------------------------------
# Hash Functions (Essential)
# ----------------------------------------------------------------------------
# Fast hashing
xxhash>=3.4.1,<3.5.0

# ----------------------------------------------------------------------------
# CLI (Essential)
# ----------------------------------------------------------------------------
# Click for CLI
click>=8.1.7,<8.2.0

# Rich for output formatting
rich>=13.7.0,<13.8.0

# ----------------------------------------------------------------------------
# Hugging Face Hub (Essential for model downloads)
# ----------------------------------------------------------------------------
# HF Hub client
huggingface-hub>=0.20.0,<0.24.0

# ----------------------------------------------------------------------------
# Accelerate (Lightweight, essential for model loading)
# ----------------------------------------------------------------------------
# Accelerate for mixed precision and device management
accelerate>=0.25.0,<0.31.0

# ----------------------------------------------------------------------------
# Package Management (Essential)
# ----------------------------------------------------------------------------
# Package version utilities
packaging>=23.2,<24.2.0

# ============================================================================
# Installation Notes for Minimal Requirements
# ============================================================================
# 1. Install minimal dependencies:
#    pip install -r requirements/minimal.txt
#
# 2. Estimated installation size:
#    - Download: ~2.5GB (PyTorch + Transformers)
#    - Installed: ~5GB
#    - Compare to full: ~15GB
#
# 3. Installation time:
#    - Fast connection: ~3-5 minutes
#    - Slow connection: ~10-15 minutes
#    - Compare to full: ~30-60 minutes
#
# 4. Memory requirements:
#    - Minimum RAM: 4GB
#    - Recommended: 8GB
#    - With model loaded: +2-4GB
#
# 5. Quick test:
#    python -c "from transformers import pipeline; print('OK')"
#
# 6. Basic usage:
#    # Load pre-trained model
#    from transformers import AutoModelForSequenceClassification, AutoTokenizer
#    model = AutoModelForSequenceClassification.from_pretrained("path/to/model")
#    tokenizer = AutoTokenizer.from_pretrained("path/to/model")
#    
#    # Inference
#    inputs = tokenizer("News text here", return_tensors="pt")
#    outputs = model(**inputs)
#    predictions = outputs.logits.argmax(-1)
#
# 7. Simple API:
#    uvicorn src.api.local.simple_api:app --host 0.0.0.0 --port 8000
#
# 8. Run tests:
#    pytest tests/unit/core/ -v
#
# 9. Download NLTK data (required for text preprocessing):
#    python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"
#
# 10. Minimal deployment:
#     FROM python:3.10-slim
#     COPY requirements/minimal.txt .
#     RUN pip install -r minimal.txt
#     COPY src/ /app/src/
#     COPY outputs/models/fine_tuned/ /app/models/
#     CMD ["uvicorn", "src.api.local.simple_api:app", "--host", "0.0.0.0"]
#
# What's NOT included (install separately if needed):
# - Training: pip install -r requirements/ml.txt
# - LLM support: pip install -r requirements/llm.txt
# - Data augmentation: pip install -r requirements/data.txt
# - Visualization: pip install -r requirements/ui.txt
# - Development tools: pip install -r requirements/dev.txt
# - Documentation: pip install -r requirements/docs.txt
# - Full stack: pip install -r requirements/all_local.txt
#
# Supported platforms:
# - Linux: Full support
# - macOS: Full support
# - Windows: Full support
# - Docker: Optimized for minimal image size
# - Colab: ✓ Compatible with free tier
# - Kaggle: ✓ Compatible with kernels
#
# GPU support:
# - CUDA: Install torch with CUDA manually:
#   pip install torch==2.1.0 --index-url https://download.pytorch.org/whl/cu118
# - CPU-only: Default installation (lighter)
#
# Offline installation:
# 1. Download wheels on machine with internet:
#    pip download -r requirements/minimal.txt -d wheels/
# 2. Transfer wheels/ directory to offline machine
# 3. Install offline:
#    pip install --no-index --find-links wheels/ -r requirements/minimal.txt
#
# Docker optimization:
# - Use multi-stage builds
# - Share layers with base images
# - Estimated image size: ~3GB (vs ~8GB for full)
#
# Performance:
# - Inference speed: Same as full installation
# - Model loading: Same as full installation
# - API throughput: 90% of full (limited monitoring)
#
# Limitations:
# - No training capabilities
# - No LoRA/QLoRA support
# - No ensemble methods
# - No advanced augmentation
# - No visualization tools
# - No development tools
# - No documentation generation
# - Limited experiment tracking
# - Basic API only (no WebSocket, streaming)
#
# Upgrade path:
# - Add training: pip install -r requirements/ml.txt
# - Add everything: pip install -r requirements/all_local.txt
#
# For quick start with minimal setup:
# - See quickstart/minimal_example.py
# - See quickstart/use_cases/quick_demo_5min.py
# - See QUICK_START.md
#
# Compatibility:
# - Python 3.8: Supported
# - Python 3.9: Supported
# - Python 3.10: Supported (recommended)
# - Python 3.11: Supported
# - Python 3.12: Limited (some packages may not be available)
#
# Project-specific minimal scripts:
# - Health check: python src/core/health/health_checker.py
# - Simple inference: python quickstart/minimal_example.py
# - API demo: python src/api/local/simple_api.py
# - Basic test: pytest tests/unit/core/ -v --maxfail=1
#
# For full documentation:
# - See docs/getting_started/installation.md
# - See QUICK_START.md
# - See quickstart/README.md
# ============================================================================
