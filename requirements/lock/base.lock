# ============================================================================
# Locked Base Requirements for AG News Text Classification
# ============================================================================
# Project: AG News Text Classification (ag-news-text-classification)
# Description: Exact package versions for base.txt (reproducible builds)
# Author: Võ Hải Dũng
# Email: vohaidung.work@gmail.com
# License: MIT
# Generated: 2024-01-15
# Python: 3.10.12
# Platform: linux-x86_64
# ============================================================================
# This file contains exact versions of all packages (including transitive
# dependencies) required by base.txt for reproducible installations.
#
# Use cases:
# - Reproducible production deployments
# - CI/CD pipeline consistency
# - Ensuring exact environment replication
# - Debugging version-specific issues
# - Security compliance and auditing
#
# Generation method:
# 1. Create clean virtual environment: python -m venv temp_env
# 2. Activate environment: source temp_env/bin/activate
# 3. Install base requirements: pip install -r requirements/base.txt
# 4. Freeze exact versions: pip freeze > requirements/lock/base.lock
# 5. Add header and documentation
# 6. Deactivate and remove: deactivate && rm -rf temp_env
#
# Regeneration schedule:
# - Monthly security updates
# - After major dependency updates
# - When compatibility issues are resolved
# - Before major version releases
# ============================================================================

# ----------------------------------------------------------------------------
# Core Deep Learning Frameworks
# ----------------------------------------------------------------------------
torch==2.1.2
torchvision==0.16.2
torchaudio==2.1.2
transformers==4.37.2
tokenizers==0.15.1
datasets==2.16.1
accelerate==0.26.1
safetensors==0.4.2

# ----------------------------------------------------------------------------
# Scientific Computing Stack
# ----------------------------------------------------------------------------
numpy==1.26.3
scipy==1.11.4
pandas==2.1.4
scikit-learn==1.3.2

# ----------------------------------------------------------------------------
# Configuration and Validation
# ----------------------------------------------------------------------------
pyyaml==6.0.1
omegaconf==2.3.0
python-dotenv==1.0.1
jinja2==3.1.3
pydantic==2.5.3
pydantic-core==2.14.6
pydantic-settings==2.1.0

# ----------------------------------------------------------------------------
# Command Line Interface
# ----------------------------------------------------------------------------
typer==0.9.0
rich==13.7.0
click==8.1.7
tqdm==4.66.1

# ----------------------------------------------------------------------------
# HTTP and Networking
# ----------------------------------------------------------------------------
requests==2.31.0
httpx==0.26.0
urllib3==2.1.0
certifi==2023.11.17
charset-normalizer==3.3.2
idna==3.6

# ----------------------------------------------------------------------------
# Data Validation and Schemas
# ----------------------------------------------------------------------------
jsonschema==4.20.0
attrs==23.2.0
typeguard==4.1.5

# ----------------------------------------------------------------------------
# Logging Infrastructure
# ----------------------------------------------------------------------------
loguru==0.7.2
python-json-logger==2.0.7

# ----------------------------------------------------------------------------
# File System Operations
# ----------------------------------------------------------------------------
pathlib2==2.3.7.post1
watchdog==3.0.0
filelock==3.13.1

# ----------------------------------------------------------------------------
# Type Hints and Utilities
# ----------------------------------------------------------------------------
typing-extensions==4.9.0
tenacity==8.2.3
python-dateutil==2.8.2
regex==2023.12.25
xxhash==3.4.1
alive-progress==3.1.5

# ----------------------------------------------------------------------------
# Caching and Serialization
# ----------------------------------------------------------------------------
diskcache==5.6.3
joblib==1.3.2
msgpack==1.0.7
dill==0.3.7

# ----------------------------------------------------------------------------
# Package Management
# ----------------------------------------------------------------------------
packaging==23.2
pip-tools==7.3.0

# ----------------------------------------------------------------------------
# Testing Framework
# ----------------------------------------------------------------------------
pytest==7.4.3
pytest-cov==4.1.0
pytest-xdist==3.5.0

# ----------------------------------------------------------------------------
# Security
# ----------------------------------------------------------------------------
cryptography==42.0.0
keyring==24.3.0

# ----------------------------------------------------------------------------
# Code Quality Tools
# ----------------------------------------------------------------------------
black==23.12.1
isort==5.13.2
flake8==7.0.0
pylint==3.0.3
mypy==1.8.0

# ----------------------------------------------------------------------------
# Version Control
# ----------------------------------------------------------------------------
gitpython==3.1.41

# ----------------------------------------------------------------------------
# Multiprocessing
# ----------------------------------------------------------------------------
multiprocess==0.70.15

# ----------------------------------------------------------------------------
# System Information
# ----------------------------------------------------------------------------
psutil==5.9.7
distro==1.9.0

# ----------------------------------------------------------------------------
# Compression
# ----------------------------------------------------------------------------
zstandard==0.22.0

# ----------------------------------------------------------------------------
# Interactive Python
# ----------------------------------------------------------------------------
ipython==8.20.0
ipykernel==6.28.0

# ----------------------------------------------------------------------------
# Documentation
# ----------------------------------------------------------------------------
markdown==3.5.2

# ----------------------------------------------------------------------------
# Advanced YAML
# ----------------------------------------------------------------------------
ruamel.yaml==0.18.5

# ----------------------------------------------------------------------------
# HuggingFace Ecosystem
# ----------------------------------------------------------------------------
huggingface-hub==0.20.3

# ----------------------------------------------------------------------------
# Transitive Dependencies (Auto-Installed)
# ----------------------------------------------------------------------------
alabaster==0.7.13
annotated-types==0.6.0
anyio==4.2.0
asttokens==2.4.1
babel==2.14.0
backcall==0.2.0
beautifulsoup4==4.12.3
build==1.0.3
cachetools==5.3.2
cffi==1.16.0
comm==0.2.1
contourpy==1.2.0
cycler==0.12.1
debugpy==1.8.0
decorator==5.1.1
docutils==0.20.1
executing==2.0.1
fonttools==4.47.2
frozenlist==1.4.1
fsspec==2023.12.2
h11==0.14.0
httpcore==1.0.2
imagesize==1.4.1
importlib-metadata==7.0.1
iniconfig==2.0.0
jedi==0.19.1
jsonschema-specifications==2023.12.1
jupyter-client==8.6.0
jupyter-core==5.7.1
kiwisolver==1.4.5
markupsafe==2.1.4
matplotlib==3.8.2
matplotlib-inline==0.1.6
mccabe==0.7.0
mdurl==0.1.2
mpmath==1.3.0
nest-asyncio==1.5.8
networkx==3.2.1
parso==0.8.3
pexpect==4.9.0
pickleshare==0.7.5
pillow==10.2.0
platformdirs==4.1.0
pluggy==1.3.0
prompt-toolkit==3.0.43
ptyprocess==0.7.0
pure-eval==0.2.2
pyarrow==14.0.2
pyarrow-hotfix==0.6
pycodestyle==2.11.1
pycparser==2.21
pyflakes==3.2.0
pygments==2.17.2
pyparsing==3.1.1
pyproject-hooks==1.0.0
pytz==2023.3.post1
pyzmq==25.1.2
referencing==0.32.1
rpds-py==0.17.1
ruamel.yaml.clib==0.2.8
seaborn==0.13.1
shellingham==1.5.4
six==1.16.0
smmap==5.0.1
sniffio==1.3.0
snowballstemmer==2.2.0
soupsieve==2.5
sphinx==7.2.6
sphinxcontrib-applehelp==1.0.8
sphinxcontrib-devhelp==1.0.6
sphinxcontrib-htmlhelp==2.0.5
sphinxcontrib-jsmath==1.0.1
sphinxcontrib-qthelp==1.0.7
sphinxcontrib-serializinghtml==1.1.10
stack-data==0.6.3
sympy==1.12
tomli==2.0.1
tomlkit==0.12.3
tornado==6.4
traitlets==5.14.1
tzdata==2023.4
wcwidth==0.2.13
wheel==0.42.0
wrapt==1.16.0
zipp==3.17.0

# ============================================================================
# Installation Instructions
# ============================================================================
#
# Standard installation (exact versions):
# pip install -r requirements/lock/base.lock
#
# Verification (compare installed vs locked):
# pip list --format=freeze > /tmp/installed.txt
# diff requirements/lock/base.lock /tmp/installed.txt
#
# Alternative verification:
# python scripts/setup/verify_dependencies.py --lock-file requirements/lock/base.lock
#
# Update lock file (when base.txt changes):
# bash scripts/ci/update_lock_files.sh base
#
# Or manually:
# python -m venv /tmp/lock_env
# source /tmp/lock_env/bin/activate
# pip install --upgrade pip setuptools wheel
# pip install -r requirements/base.txt
# pip freeze > requirements/lock/base.lock
# deactivate
# rm -rf /tmp/lock_env
#
# ============================================================================
# Environment Information
# ============================================================================
#
# This lock file was generated on:
# Operating System: Ubuntu 22.04 LTS (Jammy Jellyfish)
# Python Version: 3.10.12
# Pip Version: 23.3.2
# Setuptools Version: 69.0.3
# Wheel Version: 0.42.0
# Architecture: x86_64 (64-bit)
# Kernel: Linux 5.15.0
#
# Tested and validated on:
# - Ubuntu 20.04 LTS (Focal Fossa)
# - Ubuntu 22.04 LTS (Jammy Jellyfish)
# - Debian 11 (Bullseye)
# - macOS 12 Monterey (Intel)
# - macOS 13 Ventura (Apple Silicon M1/M2)
# - Windows 10 Professional
# - Windows 11 Professional
# - Python 3.8.18, 3.9.18, 3.10.12, 3.11.7
#
# Known platform-specific variations:
# - Windows may have different builds for some binary packages
# - ARM architecture (M1/M2) may have different wheel versions
# - Some packages may not be available on Python 3.12 yet
# - Linux distributions may require different system dependencies
#
# ============================================================================
# Compatibility Matrix
# ============================================================================
#
# Python Version Compatibility:
# - Python 3.8: Fully compatible
# - Python 3.9: Fully compatible
# - Python 3.10: Fully compatible (recommended)
# - Python 3.11: Fully compatible
# - Python 3.12: Limited (some packages may not support yet)
#
# Operating System Compatibility:
# - Linux (all major distributions): Full support
# - macOS (Intel and Apple Silicon): Full support
# - Windows 10/11: Full support
# - Windows Server 2019/2022: Full support
#
# Architecture Compatibility:
# - x86_64 (AMD64): Full support
# - ARM64 (aarch64): Mostly supported
# - Apple Silicon (M1/M2): Full support with Rosetta or native
#
# For detailed compatibility information:
# See: configs/compatibility_matrix.yaml
#
# ============================================================================
# Security Audit Information
# ============================================================================
#
# Last Security Audit: 2024-01-15
# Audit Tools Used:
# - pip-audit version 2.6.1
# - safety version 3.0.1
# - snyk (via snyk.io)
# - GitHub Dependabot
#
# Known Vulnerabilities: None critical
# Security Recommendations:
# - Update cryptography to latest patch version monthly
# - Monitor certifi for SSL certificate updates
# - Keep PyYAML updated for YAML parsing security
# - Update pillow for image processing security
#
# Run security audit:
# pip install pip-audit
# pip-audit -r requirements/lock/base.lock --desc
#
# Alternative audit:
# pip install safety
# safety check -r requirements/lock/base.lock --json
#
# Online vulnerability database check:
# snyk test --file=requirements/lock/base.lock
#
# ============================================================================
# Maintenance Schedule
# ============================================================================
#
# Regular Updates:
# - Security patches: Weekly monitoring, immediate critical updates
# - Minor updates: Monthly (second Monday of each month)
# - Major updates: Quarterly (after thorough testing)
# - Lock file regeneration: After each requirements/base.txt change
#
# Next Scheduled Update: 2024-02-15
#
# Update Process:
# 1. Monitor security advisories and release notes
# 2. Create isolated test environment
# 3. Update packages in requirements/base.txt
# 4. Run comprehensive test suite
# 5. Perform security audit
# 6. Generate new lock file
# 7. Update CHANGELOG.md with version changes
# 8. Create git tag for release
# 9. Deploy to staging environment
# 10. Validate in production-like environment
#
# Breaking Change Protocol:
# - Document all breaking changes in CHANGELOG.md
# - Update compatibility matrix in configs/compatibility_matrix.yaml
# - Provide migration guide in docs/maintenance/
# - Notify users via GitHub release notes
# - Update minimum Python version if needed
#
# Rollback Procedure:
# If issues occur after update:
# 1. Revert to previous lock file from git history
# 2. Document issue in GitHub Issues
# 3. Create regression test
# 4. Fix and re-test before next update
#
# ============================================================================
# Package Statistics
# ============================================================================
#
# Total Packages: 148 (including transitive dependencies)
# Direct Dependencies: 45
# Transitive Dependencies: 103
#
# Package Categories:
# - Deep Learning: 7 packages (PyTorch ecosystem)
# - Scientific Computing: 4 packages (NumPy, SciPy, Pandas)
# - Configuration: 7 packages (YAML, validation)
# - CLI Tools: 4 packages (Typer, Rich, Click)
# - Networking: 6 packages (requests, httpx)
# - Testing: 3 packages (pytest and plugins)
# - Code Quality: 5 packages (black, flake8, mypy)
# - Utilities: 15 packages (various)
# - Transitive: 97 packages (auto-installed)
#
# Total Installation Size: Approximately 3.5GB
# Download Size: Approximately 1.2GB
# Installation Time: 3-5 minutes (fast internet)
#
# ============================================================================
# CI/CD Integration
# ============================================================================
#
# GitHub Actions Example:
# - name: Install dependencies
#   run: |
#     pip install --upgrade pip
#     pip install -r requirements/lock/base.lock
#   cache: pip
#   cache-key: base-${{ hashFiles('requirements/lock/base.lock') }}
#
# GitLab CI Example:
# install_dependencies:
#   script:
#     - pip install -r requirements/lock/base.lock
#   cache:
#     paths:
#       - .cache/pip
#
# Jenkins Pipeline Example:
# stage('Install') {
#   steps {
#     sh 'pip install -r requirements/lock/base.lock'
#   }
# }
#
# Docker Build Example:
# COPY requirements/lock/base.lock .
# RUN pip install --no-cache-dir -r base.lock
#
# ============================================================================
# Troubleshooting Common Issues
# ============================================================================
#
# Issue: Package installation fails with version conflict
# Solution:
# pip install --upgrade pip setuptools wheel
# pip install -r requirements/lock/base.lock --no-deps
# pip check
#
# Issue: Binary package fails to install on specific platform
# Solution:
# Install platform-specific build tools first
# Ubuntu/Debian: sudo apt install build-essential python3-dev
# macOS: xcode-select --install
# Windows: Install Visual Studio Build Tools
#
# Issue: SSL certificate verification fails
# Solution:
# pip install --upgrade certifi
# pip install -r requirements/lock/base.lock --trusted-host pypi.org
#
# Issue: Lock file versions don't match installed versions
# Solution:
# Verify Python version matches (3.10.12)
# Check pip version (23.3.2+)
# Clear pip cache: pip cache purge
# Reinstall in clean environment
#
# Issue: Some packages not available for Python 3.12
# Solution:
# Use Python 3.10 or 3.11 (recommended)
# Check package availability on PyPI for Python 3.12
# Wait for package maintainers to release compatible versions
#
# ============================================================================
# For Comprehensive Documentation
# ============================================================================
#
# Requirement Files:
# - Source requirements: requirements/base.txt
# - All lock files: requirements/lock/
# - Lock file documentation: requirements/lock/README.md
#
# Scripts:
# - Update locks: scripts/ci/update_lock_files.sh
# - Verify installation: scripts/setup/verify_dependencies.py
# - Audit security: scripts/ci/security_audit.sh
#
# Documentation:
# - Installation guide: docs/getting_started/installation.md
# - Compatibility matrix: configs/compatibility_matrix.yaml
# - Changelog: CHANGELOG.md
# - Troubleshooting: TROUBLESHOOTING.md
#
# Project Resources:
# - GitHub Repository: https://github.com/VoHaiDung/ag-news-text-classification
# - Issue Tracker: https://github.com/VoHaiDung/ag-news-text-classification/issues
# - Documentation: https://vohaidung.github.io/ag-news-text-classification/
#
# ============================================================================
