{
  // AG News Text Classification - Development Container Configuration
  // ==================================================================
  // Following best practices from:
  // - Microsoft Dev Container Specification (https://containers.dev/)
  // - VS Code Remote Development Best Practices
  // - Docker Development Environments Guidelines
  //
  // Author: Võ Hải Dũng
  // License: MIT
  
  "name": "AG News Text Classification Dev Environment",
  "dockerFile": "Dockerfile",
  
  // Build arguments for flexibility
  "build": {
    "dockerfile": "Dockerfile",
    "context": "..",
    "args": {
      "PYTHON_VERSION": "3.10",
      "CUDA_VERSION": "11.8.0",
      "UBUNTU_VERSION": "22.04",
      "NODE_VERSION": "18",
      "USERNAME": "researcher",
      "USER_UID": "1000",
      "USER_GID": "1000"
    }
  },
  
  // Container runtime settings
  "runArgs": [
    // GPU support for CUDA
    "--gpus=all",
    // Shared memory for PyTorch DataLoader
    "--shm-size=8gb",
    // IPC for multi-processing
    "--ipc=host",
    // Network for downloading models
    "--network=host",
    // Security options
    "--cap-add=SYS_PTRACE",
    "--security-opt=seccomp=unconfined"
  ],
  
  // Environment variables
  "containerEnv": {
    // Python settings
    "PYTHONUNBUFFERED": "1",
    "PYTHONDONTWRITEBYTECODE": "1",
    "PYTHONPATH": "/workspace",
    
    // CUDA settings
    "CUDA_DEVICE_ORDER": "PCI_BUS_ID",
    "TORCH_CUDA_ARCH_LIST": "7.0;7.5;8.0;8.6;8.9;9.0",
    
    // HuggingFace settings
    "TRANSFORMERS_CACHE": "/workspace/.cache/huggingface",
    "HF_HOME": "/workspace/.cache/huggingface",
    "HF_DATASETS_CACHE": "/workspace/.cache/huggingface/datasets",
    
    // Weights & Biases
    "WANDB_DIR": "/workspace/outputs/wandb",
    "WANDB_CACHE_DIR": "/workspace/.cache/wandb",
    
    // MLflow
    "MLFLOW_TRACKING_URI": "file:///workspace/outputs/mlflow",
    
    // Project settings
    "AG_NEWS_ENV": "development",
    "AG_NEWS_DEBUG": "true",
    
    // Terminal colors
    "TERM": "xterm-256color",
    "COLORTERM": "truecolor"
  },
  
  // Workspace settings
  "workspaceFolder": "/workspace",
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
  
  // Mounts for persistence
  "mounts": [
    // Cache directories
    "source=agnews-cache,target=/workspace/.cache,type=volume",
    "source=agnews-data,target=/workspace/data,type=volume",
    "source=agnews-outputs,target=/workspace/outputs,type=volume",
    
    // SSH keys for Git
    "source=${localEnv:HOME}/.ssh,target=/home/researcher/.ssh,type=bind,readonly",
    
    // Git config
    "source=${localEnv:HOME}/.gitconfig,target=/home/researcher/.gitconfig,type=bind,readonly",
    
    // AWS credentials (if needed)
    "source=${localEnv:HOME}/.aws,target=/home/researcher/.aws,type=bind,readonly",
    
    // Docker socket for DinD (Docker in Docker)
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],
  
  // Port forwarding
  "forwardPorts": [
    8501,  // Streamlit
    8888,  // Jupyter
    6006,  // TensorBoard
    5000,  // Flask/API
    3000,  // Documentation
    9001,  // Supervisor web interface
    8265,  // Ray dashboard
    8787,  // RStudio (if needed)
    4040   // Spark UI (if needed)
  ],
  
  // VS Code specific settings
  "customizations": {
    "vscode": {
      // Default extensions to install
      "extensions": [
        // Python
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.flake8",
        "ms-python.mypy-type-checker",
        
        // Jupyter
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-cell-tags",
        
        // AI/ML
        "GitHub.copilot",
        "GitHub.copilot-labs",
        "GitHub.copilot-chat",
        "ms-toolsai.vscode-ai",
        
        // Docker & Remote
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh",
        
        // Git
        "eamodio.gitlens",
        "donjayamanne.githistory",
        "mhutchie.git-graph",
        
        // Data & Config
        "redhat.vscode-yaml",
        "tamasfe.even-better-toml",
        "mechatroner.rainbow-csv",
        "RandomFractalsInc.vscode-data-preview",
        
        // Documentation
        "yzhang.markdown-all-in-one",
        "bierner.markdown-mermaid",
        "davidanson.vscode-markdownlint",
        "streetsidesoftware.code-spell-checker",
        
        // Formatting & Linting
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        "charliermarsh.ruff",
        
        // Utilities
        "christian-kohler.path-intellisense",
        "aaron-bond.better-comments",
        "wayou.vscode-todo-highlight",
        "gruntfuggly.todo-tree",
        "usernamehw.errorlens",
        "vscode-icons-team.vscode-icons",
        "oderwat.indent-rainbow",
        "2gua.rainbow-brackets",
        
        // Testing
        "hbenl.vscode-test-explorer",
        "littlefoxteam.vscode-python-test-adapter",
        "ryanluker.vscode-coverage-gutters",
        
        // Performance
        "ms-python.vscode-pylance",
        "ms-vscode.cpptools",
        "nvidia.nsight-vscode-edition"
      ],
      
      // VS Code settings
      "settings": {
        // Python settings
        "python.defaultInterpreterPath": "/opt/conda/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Path": "/opt/conda/bin/flake8",
        "python.formatting.provider": "black",
        "python.formatting.blackPath": "/opt/conda/bin/black",
        "python.sortImports.path": "/opt/conda/bin/isort",
        "python.testing.pytestEnabled": true,
        "python.testing.pytestPath": "/opt/conda/bin/pytest",
        "python.analysis.typeCheckingMode": "strict",
        "python.analysis.autoImportCompletions": true,
        "python.analysis.completeFunctionParens": true,
        
        // Jupyter settings
        "jupyter.kernels.filter": [
          {
            "path": "/opt/conda/bin/python",
            "name": "ag-news-kernel"
          }
        ],
        "jupyter.notebookFileRoot": "${workspaceFolder}",
        
        // Editor settings
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true,
          "source.fixAll": true
        },
        "editor.rulers": [88, 120],
        "editor.wordWrap": "on",
        "editor.minimap.enabled": true,
        "editor.bracketPairColorization.enabled": true,
        "editor.guides.indentation": true,
        
        // Files settings
        "files.exclude": {
          "**/__pycache__": true,
          "**/*.pyc": true,
          "**/.pytest_cache": true,
          "**/.ipynb_checkpoints": true,
          "**/.mypy_cache": true,
          "**/.ruff_cache": true,
          "**/node_modules": true,
          "**/.venv": true
        },
        "files.watcherExclude": {
          "**/.git/objects/**": true,
          "**/.git/subtree-cache/**": true,
          "**/node_modules/**": true,
          "**/.cache/**": true,
          "**/data/raw/**": true,
          "**/outputs/**": true
        },
        
        // Terminal settings
        "terminal.integrated.defaultProfile.linux": "zsh",
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/bin/zsh",
            "icon": "terminal-linux"
          }
        },
        
        // Git settings
        "git.autofetch": true,
        "git.confirmSync": false,
        "git.enableSmartCommit": true,
        
        // Remote settings
        "remote.autoForwardPorts": true,
        "remote.restoreForwardedPorts": true
      }
    }
  },
  
  // Features to add (using Dev Container Features)
  "features": {
    // Common utilities
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "installOhMyZsh": true,
      "configureZshAsDefaultShell": true,
      "username": "researcher",
      "upgradePackages": true
    },
    
    // Git
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest",
      "ppa": true
    },
    
    // Git LFS for large files
    "ghcr.io/devcontainers/features/git-lfs:1": {
      "version": "latest"
    },
    
    // GitHub CLI
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    },
    
    // Docker in Docker
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "moby": true,
      "dockerDashComposeVersion": "v2"
    },
    
    // Node.js for web UI
    "ghcr.io/devcontainers/features/node:1": {
      "version": "18",
      "nodeGypDependencies": true
    },
    
    // AWS CLI
    "ghcr.io/devcontainers/features/aws-cli:1": {
      "version": "latest"
    },
    
    // Azure CLI (optional)
    "ghcr.io/devcontainers/features/azure-cli:1": {
      "version": "latest"
    },
    
    // Terraform (for infrastructure)
    "ghcr.io/devcontainers/features/terraform:1": {
      "version": "latest"
    }
  },
  
  // Lifecycle scripts
  "postCreateCommand": "bash .devcontainer/post-create.sh",
  "postStartCommand": "bash .devcontainer/post-start.sh",
  "postAttachCommand": "bash .devcontainer/post-attach.sh",
  
  // Update content command
  "updateContentCommand": "pip install -e . && pip install -r requirements/dev.txt",
  
  // Remote user
  "remoteUser": "researcher",
  
  // Prevent container from shutting down
  "shutdownAction": "none",
  
  // Wait for container to be ready
  "waitFor": "postCreateCommand",
  
  // Development specific
  "overrideCommand": false,
  "userEnvProbe": "loginInteractiveShell"
}
