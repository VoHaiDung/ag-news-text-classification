# ============================================================================
# Local Development Environment Configuration
# ============================================================================
# Project: AG News Text Classification (ag-news-text-classification)
# Description: Environment variables for local development
# Author: Võ Hải Dũng
# Email: vohaidung.work@gmail.com
# License: MIT
# ============================================================================
#
# Academic Rationale:
#   This file provides a complete local development configuration optimized
#   for rapid experimentation and development. Following the Twelve-Factor
#   App methodology, it separates local development settings from production
#   configurations while maintaining compatibility with the overall system
#   architecture.
#
# Purpose:
#   - Local development and experimentation
#   - Quick prototyping with sample data
#   - Debugging and testing
#   - IDE integration and development tools
#
# Security Notice:
#   This file is gitignored and should NEVER be committed to version control.
#   It may contain local paths, API keys, and development credentials.
#   For sharing configuration templates, use .env.example instead.
#
# Usage:
#   1. This file is automatically loaded by python-dotenv
#   2. Values here override .env and .env.example
#   3. Customize paths and settings for your local machine
#   4. Never commit this file to git (already in .gitignore)
#
# Priority Order:
#   .env.local (highest priority)
#   .env
#   .env.example (lowest priority)
#
# Quick Start:
#   cp .env.example .env.local
#   Edit this file with your local settings
#   python quickstart/auto_start.py
#
# ============================================================================

# ============================================================================
# Project Metadata - Local Development
# ============================================================================

PROJECT_NAME="AG News Text Classification"
PROJECT_SLUG="ag-news-text-classification"
PROJECT_VERSION="1.0.0"
PROJECT_DESCRIPTION="Local development environment for text classification research"

# ============================================================================
# Environment Settings - Local Development
# ============================================================================

ENVIRONMENT="development"
DEBUG=true
VERBOSE=true
LOG_LEVEL="DEBUG"
DEV_MODE=true

# ============================================================================
# Local Directory Paths
# ============================================================================
# Absolute or relative paths optimized for local development.
# Adjust these to match your local setup.

ROOT_DIR="."
SRC_DIR="./src"
DATA_DIR="./data"
CONFIG_DIR="./configs"
SCRIPTS_DIR="./scripts"
TOOLS_DIR="./tools"
NOTEBOOKS_DIR="./notebooks"
DOCS_DIR="./docs"

# Data directories with local optimization
DATA_RAW_DIR="./data/raw"
DATA_PROCESSED_DIR="./data/processed"
DATA_AUGMENTED_DIR="./data/augmented"
DATA_EXTERNAL_DIR="./data/external"
DATA_CACHE_DIR="./data/cache"

# Output directories
OUTPUT_DIR="./outputs"
MODEL_DIR="./outputs/models"
CHECKPOINT_DIR="./outputs/models/checkpoints"
RESULTS_DIR="./outputs/results"
LOG_DIR="./outputs/logs"
ANALYSIS_DIR="./outputs/analysis"
ARTIFACTS_DIR="./outputs/artifacts"

# Cache directories for fast local development
CACHE_DIR="./.cache"
TEMP_DIR="./tmp"
HF_CACHE_DIR="./.cache/huggingface"
TRANSFORMERS_CACHE_DIR="./.cache/transformers"
DATASETS_CACHE_DIR="./.cache/datasets"

# ============================================================================
# Model Configuration - Fast Local Experimentation
# ============================================================================
# Using smaller models for faster local iteration.

# Primary model for local development
DEFAULT_MODEL="distilbert-base-uncased"
TRANSFORMER_MODEL_TYPE="distilbert"
TRANSFORMER_MODEL_NAME="distilbert-base-uncased"
TRANSFORMER_NUM_LABELS=4

# Alternative fast models for experimentation
# DEFAULT_MODEL="bert-base-uncased"
# DEFAULT_MODEL="microsoft/deberta-v3-base"
# DEFAULT_MODEL="roberta-base"

# Sequence processing - optimized for speed
MAX_SEQUENCE_LENGTH=256
MAX_TOKEN_LENGTH=256
PADDING_STRATEGY="max_length"
TRUNCATION_STRATEGY="longest_first"

# ============================================================================
# Training Configuration - Local Development
# ============================================================================
# Reduced batch sizes and epochs for fast experimentation.

# Batch sizes optimized for local GPU (adjust based on your VRAM)
BATCH_SIZE=16
TRAIN_BATCH_SIZE=16
EVAL_BATCH_SIZE=32
GRADIENT_ACCUMULATION_STEPS=1

# Quick training for development
NUM_TRAIN_EPOCHS=3
WARMUP_STEPS=100
WARMUP_RATIO=0.1

# Standard hyperparameters
LEARNING_RATE=2e-5
WEIGHT_DECAY=0.01
MAX_GRAD_NORM=1.0

# Learning rate scheduling
LR_SCHEDULER_TYPE="linear"
SCHEDULER_WARMUP_STEPS=100

# Evaluation and checkpointing - frequent for development
EVAL_STRATEGY="steps"
EVAL_STEPS=100
SAVE_STRATEGY="steps"
SAVE_STEPS=200
SAVE_TOTAL_LIMIT=3
LOAD_BEST_MODEL_AT_END=true
METRIC_FOR_BEST_MODEL="eval_accuracy"

# Logging - verbose for development
LOGGING_STRATEGY="steps"
LOGGING_STEPS=50
LOGGING_FIRST_STEP=true
REPORT_TO="tensorboard"

# ============================================================================
# Data Configuration - Local Development
# ============================================================================

# Dataset settings
DATASET_NAME="ag_news"
DATASET_SPLIT_TRAIN="train"
DATASET_SPLIT_TEST="test"

# Use sample data for fast iteration
USE_SAMPLE_DATA=true
SAMPLE_SIZE=5000
TRAIN_SAMPLE_SIZE=4000
VAL_SAMPLE_SIZE=500
TEST_SAMPLE_SIZE=500

# Data splitting
TRAIN_RATIO=0.8
VAL_RATIO=0.1
TEST_RATIO=0.1
STRATIFIED_SPLIT=true

# Data loading - optimized for local machine
NUM_WORKERS=4
PREFETCH_FACTOR=2
PIN_MEMORY=true
PERSISTENT_WORKERS=false

# Data preprocessing
LOWERCASE=false
REMOVE_PUNCTUATION=false

# Data augmentation - disabled for faster development
DATA_AUGMENTATION_ENABLED=false

# Data validation
DATA_VALIDATION_ENABLED=true
CHECK_DUPLICATES=true
CHECK_MISSING_VALUES=true

# ============================================================================
# Overfitting Prevention - Active Monitoring
# ============================================================================

OVERFITTING_PREVENTION_ENABLED=true
OVERFITTING_MONITOR_ENABLED=true
OVERFITTING_THRESHOLD=0.15
OVERFITTING_PATIENCE=3

EARLY_STOPPING_ENABLED=true
EARLY_STOPPING_PATIENCE=3
EARLY_STOPPING_THRESHOLD=0.001

VALIDATION_GUARD_ENABLED=true
TEST_SET_GUARD_ENABLED=true
TEST_SET_PROTECTION=true

COMPLEXITY_MONITOR_ENABLED=true
PARAMETER_EFFICIENCY_CHECK=true

# ============================================================================
# Efficient Fine-Tuning - Local Development
# ============================================================================

# LoRA settings for memory-efficient fine-tuning
LORA_ENABLED=false
LORA_R=8
LORA_ALPHA=16
LORA_DROPOUT=0.1
LORA_TARGET_MODULES="q_proj,v_proj"

# QLoRA settings
QLORA_ENABLED=false
QLORA_BITS=4
QLORA_USE_4BIT=false

# ============================================================================
# Platform Configuration - Local
# ============================================================================

PLATFORM="local"
PLATFORM_AUTO_DETECT=true
PLATFORM_OPTIMIZATION_ENABLED=true

LOCAL_GPU_ENABLED=true
LOCAL_GPU_COUNT=1
LOCAL_CPU_COUNT=8

QUOTA_TRACKING_ENABLED=false
QUOTA_LIMIT_ENFORCEMENT=false

# ============================================================================
# Hardware Configuration - Local GPU/CPU
# ============================================================================

# GPU settings (adjust based on your hardware)
DEVICE="cuda"
CUDA_VISIBLE_DEVICES="0"
USE_GPU=true
USE_CPU=false

# Multi-GPU training (set to false for single GPU)
NUM_GPUS=1
DISTRIBUTED_TRAINING=false

# Mixed precision for faster training on modern GPUs
MIXED_PRECISION=true
FP16=true
BF16=false

# Memory optimization
GRADIENT_CHECKPOINTING=false
MAX_MEMORY_MB=12000

# ============================================================================
# Experiment Tracking - Local Development
# ============================================================================

# TensorBoard (recommended for local development)
TENSORBOARD_ENABLED=true
TENSORBOARD_LOG_DIR="./outputs/logs/tensorboard"

# Weights & Biases (optional - requires account)
WANDB_ENABLED=false
WANDB_PROJECT="ag-news-text-classification-dev"
WANDB_ENTITY=""
WANDB_API_KEY=""
WANDB_MODE="offline"
WANDB_DIR="./outputs/logs/wandb"

# MLflow (optional - for advanced tracking)
MLFLOW_ENABLED=false
MLFLOW_TRACKING_URI="file:./outputs/logs/mlflow"
MLFLOW_EXPERIMENT_NAME="local-development"

# ============================================================================
# Hugging Face Configuration - Local Development
# ============================================================================

# Hugging Face token (optional - for private models or uploads)
HF_TOKEN=""

# Local cache directories
HF_HUB_CACHE_DIR="./.cache/huggingface/hub"
HF_DATASETS_CACHE="./.cache/huggingface/datasets"
HF_METRICS_CACHE="./.cache/huggingface/metrics"

# Offline mode (set to true to use only cached models)
HF_DATASETS_OFFLINE=false
TRANSFORMERS_OFFLINE=false

# Model upload (disabled for local development)
HF_MODEL_UPLOAD=false
HF_PUSH_TO_HUB=false

# ============================================================================
# External API Keys - Development
# ============================================================================
# Leave empty if not using these services.
# Never commit real API keys to version control.

# OpenAI (for LLM experiments)
OPENAI_API_KEY=""
OPENAI_ORGANIZATION=""
OPENAI_MODEL="gpt-3.5-turbo"

# Anthropic
ANTHROPIC_API_KEY=""

# Cohere
COHERE_API_KEY=""

# ============================================================================
# Database Configuration - Local SQLite
# ============================================================================

DATABASE_BACKEND="sqlite"
DATABASE_URL="sqlite:///./ag_news_dev.db"
DATABASE_ECHO=false
DATABASE_AUTO_MIGRATE=true

# ============================================================================
# Cache Configuration - Local Development
# ============================================================================

CACHE_BACKEND="simple"
CACHE_ENABLED=true
CACHE_TTL=3600
CACHE_MAX_SIZE=1000

# Redis (optional - uncomment if you have Redis running locally)
# CACHE_BACKEND="redis"
# REDIS_URL="redis://localhost:6379/0"
# REDIS_HOST="localhost"
# REDIS_PORT=6379
# REDIS_DB=0
# REDIS_PREFIX="ag_news_dev"

# ============================================================================
# API Configuration - Local Development Server
# ============================================================================

API_ENABLED=true
API_HOST="127.0.0.1"
API_PORT=8000
API_WORKERS=1
API_RELOAD=true
API_DEBUG=true

# API Documentation
API_TITLE="AG News Text Classification API - Development"
API_VERSION="1.0.0-dev"
API_DOCS_URL="/docs"
API_REDOC_URL="/redoc"

# API Security - relaxed for local development
API_RATE_LIMIT=1000
API_RATE_LIMIT_ENABLED=false
API_TIMEOUT=60

# CORS - allow local frontend development
API_CORS_ENABLED=true
API_CORS_ORIGINS="http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000"

# ============================================================================
# Security Configuration - Development
# ============================================================================
# These are development-only values. Never use in production.

SECRET_KEY="dev-secret-key-change-in-production"
JWT_SECRET="dev-jwt-secret-change-in-production"
JWT_ALGORITHM="HS256"
JWT_EXPIRATION_MINUTES=60

ALLOWED_HOSTS="localhost,127.0.0.1"
CORS_ALLOWED_ORIGINS="http://localhost:3000,http://localhost:8080"

# ============================================================================
# Monitoring and Alerting - Local
# ============================================================================

# Prometheus (optional)
PROMETHEUS_ENABLED=false
PROMETHEUS_PORT=9090

# Grafana (optional)
GRAFANA_ENABLED=false
GRAFANA_PORT=3000

# Alerts (disabled for local development)
ALERT_ENABLED=false

# ============================================================================
# Logging Configuration - Verbose for Development
# ============================================================================

LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
LOG_DATE_FORMAT="%Y-%m-%d %H:%M:%S"
LOG_FILE="./outputs/logs/development.log"
LOG_ROTATION="1 MB"
LOG_RETENTION_DAYS=7

# Log levels - verbose for debugging
LOG_LEVEL_ROOT="DEBUG"
LOG_LEVEL_APP="DEBUG"
LOG_LEVEL_TRANSFORMERS="INFO"
LOG_LEVEL_DATASETS="INFO"
LOG_LEVEL_TORCH="WARNING"

# Log destinations
LOG_TO_CONSOLE=true
LOG_TO_FILE=true
LOG_JSON_FORMAT=false

# ============================================================================
# Performance and Optimization - Local
# ============================================================================

# Threading
MAX_WORKERS=8
THREAD_POOL_SIZE=16

# Timeouts
REQUEST_TIMEOUT=60
CONNECT_TIMEOUT=10
READ_TIMEOUT=60

# Resource limits (adjust based on your machine)
MAX_MEMORY_GB=16
MAX_CPU_PERCENT=80

# ============================================================================
# Feature Flags - Development
# ============================================================================

ENABLE_EXPERIMENTAL_FEATURES=true
ENABLE_PROMPT_ENGINEERING=true
ENABLE_INSTRUCTION_TUNING=false

ENABLE_DATA_AUGMENTATION=false
ENABLE_ACTIVE_LEARNING=false
ENABLE_CURRICULUM_LEARNING=false
ENABLE_ADVERSARIAL_TRAINING=false

ENABLE_MODEL_COMPRESSION=false
ENABLE_QUANTIZATION=false
ENABLE_KNOWLEDGE_DISTILLATION=false

# ============================================================================
# Reproducibility - Consistent Seeds
# ============================================================================

RANDOM_SEED=42
NUMPY_SEED=42
TORCH_SEED=42
PYTHON_SEED=42

DETERMINISTIC_MODE=false
CUDNN_DETERMINISTIC=false
CUDNN_BENCHMARK=true

# ============================================================================
# Development and Debugging - Active
# ============================================================================

DEV_MODE=true
AUTO_RELOAD=true
PROFILING_ENABLED=false
MEMORY_PROFILING=false
DEBUG_BREAKPOINTS=true

# Testing
RUN_TESTS_ON_START=false
SKIP_SLOW_TESTS=true
TEST_COVERAGE_THRESHOLD=80

# ============================================================================
# Deployment Configuration - Local Only
# ============================================================================

DEPLOYMENT_MODE="local"
CONTAINER_RUNTIME="docker"

# Docker
DOCKER_IMAGE_NAME="ag-news-text-classification-dev"
DOCKER_IMAGE_TAG="latest"

# ============================================================================
# Backup and Recovery - Local
# ============================================================================

BACKUP_ENABLED=true
BACKUP_FREQUENCY="manual"
BACKUP_DESTINATION="./backup"
BACKUP_COMPRESS=true

# ============================================================================
# Custom Development Settings
# ============================================================================

# Experiment naming
EXPERIMENT_NAME="local-dev"
EXPERIMENT_TAG="dev"
EXPERIMENT_DESCRIPTION="Local development experiment"

# Model naming
MODEL_NICKNAME="local-distilbert"
MODEL_VERSION="dev"

# Results saving
SAVE_PREDICTIONS=true
SAVE_ATTENTION_WEIGHTS=false
SAVE_EMBEDDINGS=false
SAVE_CONFUSION_MATRIX=true
SAVE_CLASSIFICATION_REPORT=true

# ============================================================================
# IDE Integration - Local Development
# ============================================================================

# PyCharm / VSCode settings
IDE_INTEGRATION=true
IDE_TYPE="auto"

# Jupyter settings
JUPYTER_ENABLED=true
JUPYTER_PORT=8888
JUPYTER_TOKEN=""

# ============================================================================
# Local Machine Specific Settings
# ============================================================================
# Add your machine-specific settings below.
# These might include custom paths, specific GPU configurations, etc.

# Example: Custom data path on external drive
# DATA_DIR="/mnt/external/ag-news-data"

# Example: Specific GPU selection for multi-GPU system
# CUDA_VISIBLE_DEVICES="0,1"

# Example: Custom cache location to save disk space on system drive
# CACHE_DIR="/mnt/cache/ag-news"

# Example: Custom model directory on fast SSD
# MODEL_DIR="/mnt/nvme/models"

# ============================================================================
# Notes
# ============================================================================
#
# Development Workflow:
#   1. Activate virtual environment: source venv/bin/activate
#   2. Verify settings: python -c "from dotenv import load_dotenv; load_dotenv('.env.local'); import os; print(os.getenv('PROJECT_NAME'))"
#   3. Run quick start: python quickstart/auto_start.py
#   4. Start TensorBoard: tensorboard --logdir outputs/logs/tensorboard
#   5. Start API server: python -m uvicorn app.main:app --reload
#   6. Run tests: pytest tests/ -v
#
# Performance Tips:
#   - Use sample data (USE_SAMPLE_DATA=true) for quick iteration
#   - Enable GPU if available (USE_GPU=true)
#   - Use mixed precision training (FP16=true) for faster training
#   - Adjust BATCH_SIZE based on your GPU memory
#   - Use TensorBoard for monitoring (TENSORBOARD_ENABLED=true)
#
# Debugging Tips:
#   - Set LOG_LEVEL="DEBUG" for detailed logs
#   - Enable VERBOSE=true for more output
#   - Use DEBUG_BREAKPOINTS=true for interactive debugging
#   - Check outputs/logs/ for detailed logs
#
# Common Issues:
#   - Out of memory: Reduce BATCH_SIZE or MAX_SEQUENCE_LENGTH
#   - Slow training: Enable FP16, increase BATCH_SIZE, reduce LOGGING_STEPS
#   - Import errors: Reinstall dependencies with pip install -r requirements/dev.txt
#   - Cache issues: Delete .cache/ directory and restart
#
# Best Practices:
#   - Never commit this file to version control
#   - Use different seeds for different experiments
#   - Document experiment settings in experiment name/description
#   - Regularly backup important checkpoints
#   - Monitor GPU usage with nvidia-smi
#
# ============================================================================
